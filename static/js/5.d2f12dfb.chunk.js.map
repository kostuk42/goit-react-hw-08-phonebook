{"version":3,"sources":["components/App/App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","pages/Contacts/Contacts.js"],"names":["module","exports","defaultTheme","createTheme","ContactForm","data","useFetchAllQuery","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","_slicedToArray","addContact","isAdding","isLoading","_useState","useState","_useState2","isModalOpen","setIsModalOpen","closeAddContactModal","contacts","_jsxs","_Fragment","children","_jsx","Button","type","variant","className","css","button","endIcon","ContactPhoneIcon","onClick","ThemeProvider","theme","Container","component","maxWidth","Modal","open","onClose","Box","sx","position","top","left","transform","bgcolor","boxShadow","p","minWidth","noValidate","onSubmit","event","preventDefault","f","FormData","currentTarget","name","get","number","find","contact","toLowerCase","alert","concat","then","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","TextField","autoComplete","required","fullWidth","id","label","autoFocus","margin","mt","mb","disabled","Filter","dispatch","useDispatch","filter","useSelector","getFilter","value","onChange","e","target","updateFilter","useStyles","makeStyles","customListItemText","color","fontWeight","ContactItem","_ref","phoneNumber","onDelete","classes","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","DeleteIcon","ContactList","_useDeleteContactMuta","useDeleteContactMutation","deleteContact","filteredContacts","normalizedFilter","includes","getFilteredContacts","style","maxHeight","overflowY","List","map","ToastContainer","Contacts","styles","container"],"mappings":"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","file":"static/js/5.d2f12dfb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\",\"auth\":\"App_auth__2d1Nm\",\"wrapper\":\"App_wrapper__3ox-V\",\"filter\":\"App_filter__2-6Uf\",\"contactForm\":\"App_contactForm__Zvcs7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__1MLZK\"};","import React, {useState} from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {useAddContactMutation, useFetchAllQuery} from \"../../redux/api\";\nimport Button from \"@mui/material/Button\";\nimport {createTheme} from '@mui/material/styles';\nimport {toast} from \"react-toastify\";\nimport {ThemeProvider} from \"@emotion/react\";\nimport Container from \"@mui/material/Container\";\nimport {Box, Modal, TextField} from \"@mui/material\";\nimport css from './ContactForm.module.css';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nconst defaultTheme = createTheme();\n\nconst ContactForm = () => {\n    const {data} = useFetchAllQuery();\n    const [addContact, {isLoading: isAdding}] = useAddContactMutation();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const openAddContactModal = () => {\n        setIsModalOpen(true);\n    };\n\n    const closeAddContactModal = () => {\n        setIsModalOpen(false);\n    };\n    const contacts = data || [];\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const f = new FormData(event.currentTarget);\n        const name = f.get('name');\n        const number = f.get('number');\n        if (!name || !number) {\n            toast.error('Name and number required!', {\n                position: \"top-right\",\n                autoClose: false,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n            return;\n        }\n        const existingContact = contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase());\n        if (existingContact) {\n            alert(`${name} is already in contacts.`);\n        } else {\n            closeAddContactModal()\n            addContact({name, number}).then(() => {\n                toast.success('Contact has been successfully added!', {\n                    position: \"top-right\",\n                    autoClose: false,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                    theme: \"light\",\n                });\n            });\n        }\n    };\n\n    return (\n        <>\n            <Button type=\"button\"\n                    variant=\"contained\"\n                    className={css.button}\n                    endIcon={<ContactPhoneIcon/>}\n                    onClick={openAddContactModal}>\n                {isAdding ? 'Adding...' : 'Add Contact'}\n            </Button>\n            <ThemeProvider theme={defaultTheme}>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    <Modal open={isModalOpen} onClose={closeAddContactModal}>\n                        <Box sx={{\n                            position: 'absolute',\n                            top: '50%',\n                            left: '50%',\n                            transform: 'translate(-50%, -50%)',\n                            bgcolor: 'background.paper',\n                            boxShadow: 24,\n                            p: 4,\n                            minWidth: 300,\n                            maxWidth: 400,\n                        }}\n                             component=\"form\" noValidate onSubmit={handleSubmit}>\n                            <TextField\n                                autoComplete=\"name\"\n                                name=\"name\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                autoFocus\n\n                            />\n                            <TextField\n                                margin={\"normal\"}\n                                required\n                                fullWidth\n                                id=\"number\"\n                                label=\"Number\"\n                                name=\"number\"\n                                type=\"tel\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                sx={{mt: 3, mb: 2}}\n                                disabled={isAdding}\n                            >\n                                {isAdding ? 'Adding...' : 'Add Contact'}\n                            </Button>\n                        </Box>\n                    </Modal>\n                </Container>\n            </ThemeProvider>\n        </>\n    );\n};\n\nexport default ContactForm;\n\n\n","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFilter} from \"../../redux/selectors\";\nimport {updateFilter} from \"../../redux/filterSlice\";\nimport {TextField} from \"@mui/material\";\n\nconst Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n    const onChangeFilter = (value) => {\n        dispatch(updateFilter(value))\n    }\n    return (\n        <TextField\n            label=\"Find contacts by name\"\n            variant=\"outlined\"\n            value={filter}\n            fullWidth={true}\n            onChange={(e) => onChangeFilter(e.target.value)}\n        />\n    );\n};\n\nexport default Filter;\n\n\n","import React from 'react';\nimport {ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {makeStyles} from '@mui/styles'\nimport css from './ContactItem.module.css';\n\nconst useStyles = makeStyles((theme) => ({\n    customListItemText: {\n        color: '#1665C0',\n        '& .MuiListItemText-secondary': {\n            color: 'orange',\n            fontWeight: '700'\n        },\n        fontWeight: '700',\n    },\n}));\n\nconst ContactItem = ({ name, phoneNumber, onDelete }) => {\n    const classes = useStyles();\n    return (\n        <ListItem>\n            <ListItemText primary={name}\n                          className={classes.customListItemText}\n                          secondary={phoneNumber} />\n            <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDelete}>\n                    <DeleteIcon />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getFilter} from \"../../redux/selectors\";\nimport {useDeleteContactMutation, useFetchAllQuery} from \"../../redux/api\";\nimport {List} from '@mui/material';\nimport ContactItem from \"../ContactItem/ContactItem\";\nimport {toast, ToastContainer} from \"react-toastify\";\n\n\nconst getFilteredContacts = (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n};\n\nconst ContactList = () => {\n    const res = useFetchAllQuery();\n    const contacts = res.data || [];\n    const [deleteContact] = useDeleteContactMutation();\n    const filter = useSelector(getFilter);\n    const filteredContacts = getFilteredContacts(filter, contacts);\n    const deleteHandler = (id) => {\n        deleteContact(id);\n        toast.success('Contact deleted', {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n        });\n    }\n    return (\n        <div style={{maxHeight: '50vh', overflowY: 'auto'}}>\n            <List>\n                {filteredContacts.map((contact) => (\n                    <ContactItem\n                        key={contact.id}\n                        name={contact.name}\n                        phoneNumber={contact.number}\n                        onDelete={() => deleteHandler(contact.id)}\n                    />\n                ))}\n            </List>\n            <ToastContainer />\n        </div>\n\n    );\n};\n\nexport default ContactList;\n\n","import React from 'react';\nimport styles from \"../../components/App/App.module.css\";\nimport ContactForm from \"../../components/ContactForm/ContactForm\";\nimport Filter from \"../../components/Filter/Filter\";\nimport ContactList from \"../../components/ContactList/ContactList\";\nimport {ToastContainer} from \"react-toastify\";\n\nconst Contacts = () => {\n    return (\n        <div className={styles.container}>\n            <h2>Contacts:</h2>\n            <ContactForm />\n            <Filter/>\n            <ContactList/>\n            <ToastContainer/>\n        </div>\n    );\n};\n\nexport default Contacts;\n\n"],"sourceRoot":""}