{"version":3,"sources":["components/AuthNav/AuthNav.js","components/Navigation/Navigation.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","components/Layout.js","components/RestrictedRoute.js","components/PrivateRoute.js","components/App/App.js","redux/store.js","index.js","redux/selectors.js","redux/api.js","redux/authSlice.js","components/AuthNav/AuthNav.module.css","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","redux/filterSlice.js","components/AppBar/AppBar.module.css"],"names":["StyledLink","styled","NavLink","_templateObject","_taggedTemplateLiteral","AuthNav","_jsxs","className","css","container","children","_jsx","link","to","Navigation","isLoggedIn","useSelector","getIsLoggedIn","UserMenu","dispatch","useDispatch","user","getUser","wrapper","username","name","Button","type","variant","onClick","clearUserAndToken","AppBar","header","Layout","Suspense","fallback","Outlet","RestrictedRoute","_ref","Component","component","_ref$redirectTo","redirectTo","Navigate","PrivateRoute","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","Routes","Route","path","element","index","replace","persistConfig","key","version","storage","blacklist","api","reducerPath","rootReducer","combineReducers","_combineReducers","_defineProperty","reducer","filterReducer","authReducer","persistingReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","persistor","persistStore","setupListeners","defaultTheme","createTheme","typography","fontFamily","ReactDOM","render","ThemeProvider","theme","Provider","PersistGate","loading","BrowserRouter","basename","document","getElementById","getFilter","state","filter","auth","createApi","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","console","log","token","set","tagTypes","endpoints","builder","fetchAll","query","providesTags","keepUnusedDataFor","addContact","mutation","contact","url","method","body","invalidatesTags","deleteContact","id","editContact","_ref2","number","login","credentials","register","logout","useFetchAllQuery","useAddContactMutation","useDeleteContactMutation","useLoginMutation","useEditContactMutation","useRegisterMutation","useLogoutMutation","useGetUserQuery","authSlice","createSlice","initialState","email","reducers","setUserAndToken","action","payload","_authSlice$actions","actions","module","exports","filterSlice","updateFilter"],"mappings":"qSAIaA,EAAaC,YAAOC,IAAPD,CAAeE,MAAAC,YAAA,oEAQ5BC,EAAU,WACnB,OACIC,eAAA,OAAKC,UAAWC,IAAIC,UAAUC,SAAA,CAC1BC,cAACX,EAAU,CAACO,UAAWC,IAAII,KAClBC,GAAG,YAAWH,SAAC,aAGxBC,cAACX,EAAU,CAACO,UAAWC,IAAII,KAClBC,GAAG,SAAQH,SAAC,eCfpBI,EAAa,WACtB,IAAMC,EAAaC,YAAYC,KAC/B,OACIX,eAAA,OAAAI,SAAA,CACIC,cAACX,EAAU,CAACO,UAAWC,IAAII,KAAMC,GAAG,IAAGH,SAAC,SAGvCK,GACGJ,cAACX,EAAU,CAACO,UAAWC,IAAII,KAAMC,GAAG,YAAWH,SAAC,iB,kCCPnDQ,EAAW,WACpB,IAAMC,EAAWC,cACXC,EAAOL,YAAYM,KACzB,OACIhB,eAAA,OAAKC,UAAWC,IAAIe,QAAQb,SAAA,CACxBJ,eAAA,KAAGC,UAAWC,IAAIgB,SAASd,SAAA,CAAC,YAAUW,EAAKI,QAC3Cd,cAACe,IAAM,CAACC,KAAK,SAASC,QAAQ,YAAYC,QAAS,kBAAMV,EAASW,gBAAqBpB,SAAC,e,iBCLvFqB,EAAS,WAClB,IAAMhB,EAAaC,YAAYC,KAC/B,OACIX,eAAA,UAAQC,UAAWC,IAAIwB,OAAOtB,SAAA,CAC1BC,cAACG,EAAU,IACVC,EAAaJ,cAACO,EAAQ,IAAKP,cAACN,EAAO,QCRnC4B,EAAS,WAClB,OACI3B,eAAA,OAAAI,SAAA,CACIC,cAACoB,EAAM,IACPpB,cAACuB,WAAQ,CAACC,SAAU,KAAKzB,SACrBC,cAACyB,IAAM,UCJVC,EAAkB,SAAHC,GAAoD,IAAnCC,EAASD,EAApBE,UAASC,EAAAH,EAAaI,kBAAU,IAAAD,EAAG,IAAGA,EAEpE,OADmBzB,YAAYC,KACXN,cAACgC,IAAQ,CAAC9B,GAAI6B,IAAiBH,GCH1CK,EAAe,SAAHN,GAAoD,IAAnCC,EAASD,EAApBE,UAASC,EAAAH,EAAaI,kBAAU,IAAAD,EAAG,IAAGA,EAEjE,OADmBzB,YAAYC,KACXsB,EAAY5B,cAACgC,IAAQ,CAAC9B,GAAI6B,KCA5CG,EAAWC,gBAAK,kBAAM,iCACtBC,EAAeD,gBAAK,kBAAM,8DAC1BE,EAAYF,gBAAK,kBAAM,8DACvBG,EAAeH,gBAAK,kBAAM,8DA+BjBI,EA7BI,WACf,OACIvC,cAACwC,IAAM,CAAAzC,SACHJ,eAAC8C,IAAK,CAACC,KAAK,IAAIC,QAAS3C,cAACsB,EAAM,IAAGvB,SAAA,CAC/BC,cAACyC,IAAK,CAACG,OAAK,EAACD,QAAS3C,cAACkC,EAAQ,MAC/BlC,cAACyC,IAAK,CACFC,KAAK,YACLC,QACI3C,cAAC0B,EAAe,CAACK,WAAW,YAAYF,UAAW7B,cAACoC,EAAY,QAGxEpC,cAACyC,IAAK,CACFC,KAAK,SACLC,QACI3C,cAAC0B,EAAe,CAACK,WAAW,YAAYF,UAAW7B,cAACqC,EAAS,QAGrErC,cAACyC,IAAK,CACFC,KAAK,YACLC,QACI3C,cAACiC,EAAY,CAACF,WAAW,SAASF,UAAW7B,cAACsC,EAAY,QAGlEtC,cAACyC,IAAK,CAACC,KAAK,IAAIC,QAAS3C,cAACgC,IAAQ,CAAC9B,GAAG,IAAI2C,SAAO,Y,sEChB3DC,EAAgB,CAClBC,IAAK,OACLC,QAAS,EACTC,Q,OAAAA,EACAC,UAAW,CAACC,IAAIC,YAAa,WAG3BC,EAAcC,aAAeC,EAAA,GAAAC,YAAAD,EAC9BJ,IAAIC,YAAcD,IAAIM,SAAOD,YAAAD,EAAC,SACvBG,KAAaF,YAAAD,EAAC,OAChBI,KAAWJ,IAGfK,EAAoBC,YAAef,EAAeO,GAE3CS,EAAQC,YAAe,CAChCN,QAASG,EACTI,WAAY,SAAAC,GAAoB,OAC5BA,EAAqB,CACjBC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,QAE/DC,OAAOvB,IAAIa,eAGTW,EAAYC,YAAad,GAWtCe,YAAef,EAAMtD,U,8DCrCfsE,I,OAAeC,YAAY,CAC7BC,WAAY,CACRC,WAAY,yBAIpBC,IAASC,OACLnF,cAACoF,IAAa,CAACC,MAAOP,GAAa/E,SAC/BC,cAACsF,IAAQ,CAACxB,MAAOA,EAAM/D,SACnBC,cAACuF,IAAW,CAACC,QAAS,KAAMb,UAAWA,EAAU5E,SAC7CC,cAACyF,IAAa,CAACC,SAAU,8BAA8B3F,SACnDC,cAACuC,EAAG,YAKlBoD,SAASC,eAAe,U,gCChC9B,sGAAO,IAAMC,EAAY,SAACC,GAAK,OAAKA,EAAMC,QAC7BpF,EAAS,SAACmF,GAAK,OAAKA,EAAME,KAAKtF,MAC/BJ,EAAgB,SAACwF,GAAK,OAAKA,EAAME,KAAK5F,a,gCCHnD,gOAEa+C,EAAM8C,YAAU,CACzB7C,YAAa,WACb8C,UAAWC,YACP,CACIC,QAAS,wCACTC,eAAgB,SAACC,EAAO3E,GAAkB,IAAf4E,EAAQ5E,EAAR4E,SACvBC,QAAQC,IAAI,cACZD,QAAQC,IAAIF,KACZ,IAAMG,EAAQH,IAAWP,KAAOO,IAAWP,KAAKU,MAAQ,KAIxD,OAHIA,GACAJ,EAAQK,IAAI,gBAAgB,UAADjC,OAAYgC,IAEpCJ,KAInBM,SAAU,CAAC,WAAY,QACvBC,UAAW,SAACC,GAAO,MAAM,CACrBC,SAAUD,EAAQE,MAAM,CACpBA,MAAO,8BACPC,aAAc,CAAC,YACfC,kBAAmB,IAEvBC,WAAYL,EAAQM,SAAS,CACzBJ,MAAO,SAAAK,GAAO,MAAK,CACfC,IAAI,YACJC,OAAQ,OACRC,KAAMH,IAEVI,gBAAiB,CAAC,cAEtBC,cAAeZ,EAAQM,SAAS,CAC5BJ,MAAO,SAAAW,GAAE,MAAK,CACVL,IAAI,aAAD5C,OAAeiD,GAClBJ,OAAQ,WAEZE,gBAAiB,CAAC,cAGtBG,YAAad,EAAQM,SAAS,CAC1BJ,MAAO,SAAAa,GAAA,IAAGF,EAAEE,EAAFF,GAAI7G,EAAI+G,EAAJ/G,KAAMgH,EAAMD,EAANC,OAAM,MAAQ,CAC9BR,IAAI,aAAD5C,OAAeiD,GAClBJ,OAAQ,QACRC,KAAM,CAAE1G,OAAMgH,YAElBL,gBAAiB,CAAC,cAEtBM,MAAOjB,EAAQM,SAAS,CACpBJ,MAAO,SAACgB,GAAW,MAAM,CACrBV,IAAK,cACLC,OAAQ,OACRC,KAAMQ,IAEVP,gBAAiB,CAAC,UAEtBQ,SAAUnB,EAAQM,SAAS,CACvBJ,MAAO,SAACtG,GAAI,MAAM,CACd4G,IAAK,eACLC,OAAQ,OACRC,KAAM9G,IAEV+G,gBAAiB,CAAC,UAEtBS,OAAQpB,EAAQM,SAAS,CACrBJ,MAAO,iBAAO,CACVM,IAAK,eACLC,OAAQ,SAEZE,gBAAiB,CAAC,UAEtB9G,QAASmG,EAAQE,MAAM,CACnBA,MAAO,iBAAM,YACbC,aAAc,CAAC,cAQvBkB,EAQAhF,EARAgF,iBACAC,EAOAjF,EAPAiF,sBACAC,EAMAlF,EANAkF,yBAEAC,GAIAnF,EALAoF,uBAKApF,EAJAmF,kBAEAE,GAEArF,EAHAsF,kBAGAtF,EAFAqF,qBAEArF,EADAuF,iB,gCCzFJ,iHAEMC,EAAYC,YAAY,CAC1B9H,KAAM,OACN+H,aAAc,CACVnI,KAAM,CAAEI,KAAM,KAAMgI,MAAO,MAC3BpC,MAAO,KACPtG,YAAY,GAEhB2I,SAAU,CACNC,gBAAe,SAAClD,EAAOmD,GACnBnD,EAAMpF,KAAOuI,EAAOC,QAAQxI,KAC5BoF,EAAMY,MAAQuC,EAAOC,QAAQxC,MAC7BZ,EAAM1F,YAAa,GAEvBe,kBAAiB,SAAC2E,GACdA,EAAMpF,KAAO,KACboF,EAAMY,MAAQ,KACdZ,EAAM1F,YAAa,MAKxB+I,EAA+CR,EAAUS,QAAjDJ,EAAeG,EAAfH,gBAAiB7H,EAAiBgI,EAAjBhI,kBACnBwC,EAAcgF,EAAUlF,S,mBCvBrC4F,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,UAAY,6B,mBCA5FD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,mBCA3DD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,SAAW,6B,gCCDjE,+EAEMC,EAAcX,YAAY,CAC5B9H,KAAM,SACN+H,aAAc,GACdE,SAAU,CACNS,aAAc,SAAC1D,EAAOmD,GAClB,OAAOA,EAAOC,YAKZM,EAAgBD,EAAYH,QAA5BI,aAED9F,EAAgB6F,EAAY9F,S,mBCbzC4F,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.e0acddff.chunk.js","sourcesContent":["import {NavLink} from 'react-router-dom';\nimport css from './AuthNav.module.css';\nimport styled from \"@emotion/styled\";\n\nexport const StyledLink = styled(NavLink)`\n  color: white;\n\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const AuthNav = () => {\n    return (\n        <div className={css.container}>\n            <StyledLink className={css.link}\n                     to=\"/register\">\n                Register\n            </StyledLink>\n            <StyledLink className={css.link}\n                     to=\"/login\">\n                Log In\n            </StyledLink>\n        </div>\n    );\n};\n","import css from './Navigation.module.css';\nimport {useSelector} from \"react-redux\";\nimport {getIsLoggedIn} from \"../../redux/selectors\";\nimport {StyledLink} from \"../AuthNav/AuthNav\";\n\nexport const Navigation = () => {\n    const isLoggedIn = useSelector(getIsLoggedIn)\n    return (\n        <nav>\n            <StyledLink className={css.link} to=\"/\">\n                Home\n            </StyledLink>\n            {isLoggedIn && (\n                <StyledLink className={css.link} to=\"/contacts\">\n                    Contacts\n                </StyledLink>\n            )}\n        </nav>\n    );\n};\n","import css from './UserMenu.module.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getUser} from \"../../redux/selectors\";\nimport {clearUserAndToken} from \"../../redux/authSlice\";\nimport Button from \"@mui/material/Button\";\n\nexport const UserMenu = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(getUser);\n    return (\n        <div className={css.wrapper}>\n            <p className={css.username}>Welcome, {user.name}</p>\n            <Button type=\"button\" variant=\"contained\" onClick={() => dispatch(clearUserAndToken())}>\n                Logout\n            </Button>\n        </div>\n    );\n};\n","import {Navigation} from '../Navigation/Navigation';\nimport {UserMenu} from '../UserMenu/UserMenu';\nimport {AuthNav} from '../AuthNav/AuthNav';\nimport css from './AppBar.module.css';\nimport {getIsLoggedIn} from \"../../redux/selectors\";\nimport {useSelector} from \"react-redux\";\n\nexport const AppBar = () => {\n    const isLoggedIn = useSelector(getIsLoggedIn);\n    return (\n        <header className={css.header}>\n            <Navigation/>\n            {isLoggedIn ? <UserMenu/> : <AuthNav/>}\n        </header>\n    );\n};\n","import { Suspense } from 'react';\nimport {AppBar} from \"./AppBar/AppBar\";\nimport { Outlet } from 'react-router-dom';\n\nexport const Layout = () => {\n    return (\n        <div>\n            <AppBar />\n            <Suspense fallback={null}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n};\n","\nimport { Navigate } from 'react-router-dom';\nimport {useSelector} from \"react-redux\";\nimport {getIsLoggedIn} from \"../redux/selectors\";\n\nexport const RestrictedRoute = ({ component: Component, redirectTo = '/' }) => {\n    const isLoggedIn = useSelector(getIsLoggedIn);\n    return isLoggedIn ? <Navigate to={redirectTo} /> : Component;\n};\n","import {useSelector} from \"react-redux\";\nimport {getIsLoggedIn} from \"../redux/selectors\";\nimport { Navigate } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, redirectTo = '/' }) => {\n    const isLoggedIn = useSelector(getIsLoggedIn);\n    return isLoggedIn ? Component : <Navigate to={redirectTo} />\n};\n","import React, {lazy} from 'react';\nimport {Route, Routes, Navigate} from \"react-router-dom\";\nimport {Layout} from \"../Layout\";\nimport {RestrictedRoute} from \"../RestrictedRoute\";\nimport {PrivateRoute} from \"../PrivateRoute\";\n\nconst HomePage = lazy(() => import('../../pages/Home/Home'));\nconst RegisterPage = lazy(() => import('../../pages/Register/Register'));\nconst LoginPage = lazy(() => import('../../pages/Login/Login'));\nconst ContactsPage = lazy(() => import('../../pages/Contacts/Contacts'));\n\nexport const App = () => {\n    return (\n        <Routes>\n            <Route path=\"/\" element={<Layout/>}>\n                <Route index element={<HomePage/>}/>\n                <Route\n                    path=\"/register\"\n                    element={\n                        <RestrictedRoute redirectTo=\"/contacts\" component={<RegisterPage/>}/>\n                    }\n                />\n                <Route\n                    path=\"/login\"\n                    element={\n                        <RestrictedRoute redirectTo=\"/contacts\" component={<LoginPage/>}/>\n                    }\n                />\n                <Route\n                    path=\"/contacts\"\n                    element={\n                        <PrivateRoute redirectTo=\"/login\" component={<ContactsPage/>}/>\n                    }\n                />\n                <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n            </Route>\n        </Routes>\n    );\n};\n\nexport default App;\n","import {combineReducers, configureStore} from '@reduxjs/toolkit';\n\nimport {filterReducer} from \"./filterSlice\";\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport {api} from \"./api\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport {authReducer} from \"./authSlice\";\n\nconst persistConfig = {\n    key: 'auth',\n    version: 1,\n    storage,\n    blacklist: [api.reducerPath, 'filter'],\n};\n\nconst rootReducer = combineReducers({\n    [api.reducerPath]: api.reducer,\n    filter: filterReducer,\n    auth: authReducer,\n});\n\nconst persistingReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n    reducer: persistingReducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }).concat(api.middleware),\n});\n\nexport const persistor = persistStore(store);\n\n// export const store = configureStore({\n//     reducer: {\n//         [api.reducerPath]: api.reducer,\n//         filter: filterReducer\n//     },\n//     middleware: (getDefaultMiddleware) =>\n//         getDefaultMiddleware().concat(api.middleware),\n// });\n\nsetupListeners(store.dispatch)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './components/App/App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport {persistor, store} from \"./redux/store\";\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport '@fontsource/roboto/100.css';\nimport '@fontsource/roboto/900.css';\nimport {createTheme} from \"@mui/material/styles\";\nimport {ThemeProvider} from \"@emotion/react\";\nimport './index.css';\n\nconst defaultTheme = createTheme({\n    typography: {\n        fontFamily: 'Roboto, sans-serif'\n    },\n});\n\nReactDOM.render(\n    <ThemeProvider theme={defaultTheme}>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <BrowserRouter basename={'/goit-react-hw-08-phonebook'}>\n                    <App/>\n                </BrowserRouter>\n            </PersistGate>\n        </Provider>\n    </ThemeProvider>\n    , document.getElementById('root'));\n\n","\nexport const getFilter = (state) => state.filter;\nexport const getUser =(state) => state.auth.user;\nexport const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\n\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\n\nexport const api = createApi({\n    reducerPath: 'contacts',\n    baseQuery: fetchBaseQuery(\n        {\n            baseUrl: 'https://connections-api.herokuapp.com',\n            prepareHeaders: (headers, {getState}) => {\n                console.log('getState()');\n                console.log(getState());\n                const token = getState().auth ? getState().auth.token : null\n                if (token) {\n                    headers.set('authorization', `Bearer ${token}`);\n                }\n                return headers;\n            }\n        }\n    ),\n    tagTypes: ['Contacts', 'User'],\n    endpoints: (builder) => ({\n        fetchAll: builder.query({\n            query: () => `/contacts`,\n            providesTags: ['Contacts'],\n            keepUnusedDataFor: 2,\n        }),\n        addContact: builder.mutation({\n            query: contact => ({\n                url: `/contacts`,\n                method: 'POST',\n                body: contact,\n            }),\n            invalidatesTags: ['Contacts'],\n        }),\n        deleteContact: builder.mutation({\n            query: id => ({\n                url: `/contacts/${id}`,\n                method: 'DELETE',\n            }),\n            invalidatesTags: ['Contacts'],\n        }),\n\n        editContact: builder.mutation({\n            query: ({ id, name, number }) => ({\n                url: `/contacts/${id}`,\n                method: 'PATCH',\n                body: { name, number },\n            }),\n            invalidatesTags: ['Contacts'],\n        }),\n        login: builder.mutation({\n            query: (credentials) => ({\n                url: 'users/login',\n                method: 'POST',\n                body: credentials,\n            }),\n            invalidatesTags: ['User'],\n        }),\n        register: builder.mutation({\n            query: (user) => ({\n                url: 'users/signup',\n                method: 'POST',\n                body: user,\n            }),\n            invalidatesTags: ['User'],\n        }),\n        logout: builder.mutation({\n            query: () => ({\n                url: 'users/logout',\n                method: 'POST'\n            }),\n            invalidatesTags: ['User'],\n        }),\n        getUser: builder.query({\n            query: () => '/current',\n            providesTags: ['User']\n        }),\n    }),\n})\n\n// Export hooks for usage in functional components, which are\n// auto-generated based on the defined endpoints\nexport const {\n    useFetchAllQuery,\n    useAddContactMutation,\n    useDeleteContactMutation,\n    useEditContactMutation,\n    useLoginMutation,\n    useLogoutMutation,\n    useRegisterMutation,\n    useGetUserQuery,\n} = api;\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: {\n        user: { name: null, email: null },\n        token: null,\n        isLoggedIn: false,\n    },\n    reducers: {\n        setUserAndToken(state, action) {\n            state.user = action.payload.user\n            state.token = action.payload.token\n            state.isLoggedIn = true\n        },\n        clearUserAndToken(state) {\n            state.user = null\n            state.token = null\n            state.isLoggedIn = false\n        },\n    },\n});\n\nexport const { setUserAndToken, clearUserAndToken } = authSlice.actions\nexport const authReducer = authSlice.reducer\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2ejsg\",\"active\":\"AuthNav_active__2WI0M\",\"container\":\"AuthNav_container__2sSIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__12o2K\",\"active\":\"Navigation_active__1Sofg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserMenu_wrapper__3KSXQ\",\"username\":\"UserMenu_username__2nvIz\"};","import {createSlice} from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState: '',\n    reducers: {\n        updateFilter: (state, action) => {\n            return action.payload;\n        },\n    },\n});\n\nexport const {updateFilter} = filterSlice.actions;\n\nexport const filterReducer = filterSlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__1Yk8v\"};"],"sourceRoot":""}